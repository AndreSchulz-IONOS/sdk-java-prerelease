/*
 * CLOUD API
 * An enterprise-grade Infrastructure is provided as a Service (IaaS) solution that can be managed through a browser-based \"Data Center Designer\" (DCD) tool or via an easy to use API.   The API allows you to perform a variety of management tasks such as spinning up additional servers, adding volumes, adjusting networking, and so forth. It is designed to allow users to leverage the same power and flexibility found within the DCD visual tool. Both tools are consistent with their concepts and lend well to making the experience smooth and intuitive.
 *
 * The version of the OpenAPI document: 6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ionoscloud.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ionoscloud.model.NetworkLoadBalancerForwardingRuleHealthCheck;
import com.ionoscloud.model.NetworkLoadBalancerForwardingRuleTarget;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for NetworkLoadBalancerForwardingRuleProperties
 */
public class NetworkLoadBalancerForwardingRulePropertiesTest {
    private final NetworkLoadBalancerForwardingRuleProperties model = new NetworkLoadBalancerForwardingRuleProperties();

    /**
     * Model tests for NetworkLoadBalancerForwardingRuleProperties
     */
    @Test
    public void testNetworkLoadBalancerForwardingRuleProperties() {
        // TODO: test NetworkLoadBalancerForwardingRuleProperties
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'algorithm'
     */
    @Test
    public void algorithmTest() {
        // TODO: test algorithm
    }

    /**
     * Test the property 'protocol'
     */
    @Test
    public void protocolTest() {
        // TODO: test protocol
    }

    /**
     * Test the property 'listenerIp'
     */
    @Test
    public void listenerIpTest() {
        // TODO: test listenerIp
    }

    /**
     * Test the property 'listenerPort'
     */
    @Test
    public void listenerPortTest() {
        // TODO: test listenerPort
    }

    /**
     * Test the property 'healthCheck'
     */
    @Test
    public void healthCheckTest() {
        // TODO: test healthCheck
    }

    /**
     * Test the property 'targets'
     */
    @Test
    public void targetsTest() {
        // TODO: test targets
    }

}
