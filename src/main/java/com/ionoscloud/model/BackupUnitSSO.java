/*
 * CLOUD API
 * IONOS Enterprise-grade Infrastructure as a Service (IaaS) solutions can be managed through the Cloud API, in addition or as an alternative to the \"Data Center Designer\" (DCD) browser-based tool.    Both methods employ consistent concepts and features, deliver similar power and flexibility, and can be used to perform a multitude of management tasks, including adding servers, volumes, configuring networks, and so on.
 *
 * The version of the OpenAPI document: 6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ionoscloud.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * BackupUnitSSO
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-07-14T13:53:14.995Z[Etc/UTC]")

public class BackupUnitSSO {
  
  public static final String SERIALIZED_NAME_SSO_URL = "ssoUrl";
  @SerializedName(SERIALIZED_NAME_SSO_URL)
  private String ssoUrl;

  

   /**
   * The backup unit single sign on url
   * @return ssoUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://<hostname>/?jwt=eyJ0eXAiO...W47AN5-_x7E", value = "The backup unit single sign on url")

  public String getSsoUrl() {
    return ssoUrl;
  }


  public void setSsoUrl(String ssoUrl) {
    this.ssoUrl = ssoUrl;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BackupUnitSSO backupUnitSSO = (BackupUnitSSO) o;
    return Objects.equals(this.ssoUrl, backupUnitSSO.ssoUrl);
  }




  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BackupUnitSSO {\n");
    
    sb.append("    ssoUrl: ").append(toIndentedString(ssoUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

