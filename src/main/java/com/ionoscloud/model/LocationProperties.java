/*
 * CLOUD API
 * IONOS Enterprise-grade Infrastructure as a Service (IaaS) solutions can be managed through the Cloud API, in addition or as an alternative to the \"Data Center Designer\" (DCD) browser-based tool.    Both methods employ consistent concepts and features, deliver similar power and flexibility, and can be used to perform a multitude of management tasks, including adding servers, volumes, configuring networks, and so on.
 *
 * The version of the OpenAPI document: 6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ionoscloud.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ionoscloud.model.CpuArchitectureProperties;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * LocationProperties
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-09-05T12:38:36.990Z[Etc/UTC]")

public class LocationProperties {
  
  public static final String SERIALIZED_NAME_CPU_ARCHITECTURE = "cpuArchitecture";
  @SerializedName(SERIALIZED_NAME_CPU_ARCHITECTURE)
  private List<CpuArchitectureProperties> cpuArchitecture = null;


  public static final String SERIALIZED_NAME_FEATURES = "features";
  @SerializedName(SERIALIZED_NAME_FEATURES)
  private List<String> features = null;


  public static final String SERIALIZED_NAME_IMAGE_ALIASES = "imageAliases";
  @SerializedName(SERIALIZED_NAME_IMAGE_ALIASES)
  private List<String> imageAliases = null;


  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  

   /**
   * A list of available CPU types and related resources available in the location.
   * @return cpuArchitecture
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of available CPU types and related resources available in the location.")

  public List<CpuArchitectureProperties> getCpuArchitecture() {
    return cpuArchitecture;
  }


  public void setCpuArchitecture(List<CpuArchitectureProperties> cpuArchitecture) {
    this.cpuArchitecture = cpuArchitecture;
  }



   /**
   * A list of available features in the location.
   * @return features
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[cloud-init-private-image, ssd, vnf-nat]", value = "A list of available features in the location.")

  public List<String> getFeatures() {
    return features;
  }


  public void setFeatures(List<String> features) {
    this.features = features;
  }



   /**
   * A list of image aliases available in the location.
   * @return imageAliases
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[windows:2012r2_iso, windows:2019_iso, ubuntu:18.04_iso]", value = "A list of image aliases available in the location.")

  public List<String> getImageAliases() {
    return imageAliases;
  }


  public void setImageAliases(List<String> imageAliases) {
    this.imageAliases = imageAliases;
  }



  public LocationProperties name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The location name.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "berlin", value = "The location name.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LocationProperties locationProperties = (LocationProperties) o;
    return Objects.equals(this.cpuArchitecture, locationProperties.cpuArchitecture) && Objects.equals(this.features, locationProperties.features) && Objects.equals(this.imageAliases, locationProperties.imageAliases) && Objects.equals(this.name, locationProperties.name);
  }




  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LocationProperties {\n");
    
    sb.append("    cpuArchitecture: ").append(toIndentedString(cpuArchitecture)).append("\n");

    sb.append("    features: ").append(toIndentedString(features)).append("\n");

    sb.append("    imageAliases: ").append(toIndentedString(imageAliases)).append("\n");

    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }



// LocationProperties instantiates a new LocationProperties object
// This constructor makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
public LocationProperties() {

}


}
