/*
 * CLOUD API
 * IONOS Enterprise-grade Infrastructure as a Service (IaaS) solutions can be managed through the Cloud API, in addition or as an alternative to the \"Data Center Designer\" (DCD) browser-based tool.    Both methods employ consistent concepts and features, deliver similar power and flexibility, and can be used to perform a multitude of management tasks, including adding servers, volumes, configuring networks, and so on.
 *
 * The version of the OpenAPI document: 6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ionoscloud.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ResourceLimits
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-07-04T09:11:50.011Z[Etc/UTC]")

public class ResourceLimits {
  public static final String SERIALIZED_NAME_CORES_PER_SERVER = "coresPerServer";
  @SerializedName(SERIALIZED_NAME_CORES_PER_SERVER)
  private Integer coresPerServer;

  public static final String SERIALIZED_NAME_CORES_PER_CONTRACT = "coresPerContract";
  @SerializedName(SERIALIZED_NAME_CORES_PER_CONTRACT)
  private Integer coresPerContract;

  public static final String SERIALIZED_NAME_CORES_PROVISIONED = "coresProvisioned";
  @SerializedName(SERIALIZED_NAME_CORES_PROVISIONED)
  private Integer coresProvisioned;

  public static final String SERIALIZED_NAME_RAM_PER_SERVER = "ramPerServer";
  @SerializedName(SERIALIZED_NAME_RAM_PER_SERVER)
  private Integer ramPerServer;

  public static final String SERIALIZED_NAME_RAM_PER_CONTRACT = "ramPerContract";
  @SerializedName(SERIALIZED_NAME_RAM_PER_CONTRACT)
  private Integer ramPerContract;

  public static final String SERIALIZED_NAME_RAM_PROVISIONED = "ramProvisioned";
  @SerializedName(SERIALIZED_NAME_RAM_PROVISIONED)
  private Integer ramProvisioned;

  public static final String SERIALIZED_NAME_HDD_LIMIT_PER_VOLUME = "hddLimitPerVolume";
  @SerializedName(SERIALIZED_NAME_HDD_LIMIT_PER_VOLUME)
  private Long hddLimitPerVolume;

  public static final String SERIALIZED_NAME_HDD_LIMIT_PER_CONTRACT = "hddLimitPerContract";
  @SerializedName(SERIALIZED_NAME_HDD_LIMIT_PER_CONTRACT)
  private Long hddLimitPerContract;

  public static final String SERIALIZED_NAME_HDD_VOLUME_PROVISIONED = "hddVolumeProvisioned";
  @SerializedName(SERIALIZED_NAME_HDD_VOLUME_PROVISIONED)
  private Long hddVolumeProvisioned;

  public static final String SERIALIZED_NAME_SSD_LIMIT_PER_VOLUME = "ssdLimitPerVolume";
  @SerializedName(SERIALIZED_NAME_SSD_LIMIT_PER_VOLUME)
  private Long ssdLimitPerVolume;

  public static final String SERIALIZED_NAME_SSD_LIMIT_PER_CONTRACT = "ssdLimitPerContract";
  @SerializedName(SERIALIZED_NAME_SSD_LIMIT_PER_CONTRACT)
  private Long ssdLimitPerContract;

  public static final String SERIALIZED_NAME_SSD_VOLUME_PROVISIONED = "ssdVolumeProvisioned";
  @SerializedName(SERIALIZED_NAME_SSD_VOLUME_PROVISIONED)
  private Long ssdVolumeProvisioned;

  public static final String SERIALIZED_NAME_DAS_VOLUME_PROVISIONED = "dasVolumeProvisioned";
  @SerializedName(SERIALIZED_NAME_DAS_VOLUME_PROVISIONED)
  private Long dasVolumeProvisioned;

  public static final String SERIALIZED_NAME_RESERVABLE_IPS = "reservableIps";
  @SerializedName(SERIALIZED_NAME_RESERVABLE_IPS)
  private Integer reservableIps;

  public static final String SERIALIZED_NAME_RESERVED_IPS_ON_CONTRACT = "reservedIpsOnContract";
  @SerializedName(SERIALIZED_NAME_RESERVED_IPS_ON_CONTRACT)
  private Integer reservedIpsOnContract;

  public static final String SERIALIZED_NAME_RESERVED_IPS_IN_USE = "reservedIpsInUse";
  @SerializedName(SERIALIZED_NAME_RESERVED_IPS_IN_USE)
  private Integer reservedIpsInUse;

  public static final String SERIALIZED_NAME_K8S_CLUSTER_LIMIT_TOTAL = "k8sClusterLimitTotal";
  @SerializedName(SERIALIZED_NAME_K8S_CLUSTER_LIMIT_TOTAL)
  private Integer k8sClusterLimitTotal;

  public static final String SERIALIZED_NAME_K8S_CLUSTERS_PROVISIONED = "k8sClustersProvisioned";
  @SerializedName(SERIALIZED_NAME_K8S_CLUSTERS_PROVISIONED)
  private Integer k8sClustersProvisioned;

  public static final String SERIALIZED_NAME_NLB_LIMIT_TOTAL = "nlbLimitTotal";
  @SerializedName(SERIALIZED_NAME_NLB_LIMIT_TOTAL)
  private Integer nlbLimitTotal;

  public static final String SERIALIZED_NAME_NLB_PROVISIONED = "nlbProvisioned";
  @SerializedName(SERIALIZED_NAME_NLB_PROVISIONED)
  private Integer nlbProvisioned;

  public static final String SERIALIZED_NAME_NAT_GATEWAY_LIMIT_TOTAL = "natGatewayLimitTotal";
  @SerializedName(SERIALIZED_NAME_NAT_GATEWAY_LIMIT_TOTAL)
  private Integer natGatewayLimitTotal;

  public static final String SERIALIZED_NAME_NAT_GATEWAY_PROVISIONED = "natGatewayProvisioned";
  @SerializedName(SERIALIZED_NAME_NAT_GATEWAY_PROVISIONED)
  private Integer natGatewayProvisioned;


  public ResourceLimits coresPerServer(Integer coresPerServer) {
    
    this.coresPerServer = coresPerServer;
    return this;
  }

   /**
   * The maximum number of cores per server.
   * @return coresPerServer
  **/
  @ApiModelProperty(required = true, value = "The maximum number of cores per server.")

  public Integer getCoresPerServer() {
    return coresPerServer;
  }


  public void setCoresPerServer(Integer coresPerServer) {
    this.coresPerServer = coresPerServer;
  }


  public ResourceLimits coresPerContract(Integer coresPerContract) {
    
    this.coresPerContract = coresPerContract;
    return this;
  }

   /**
   * The maximum number of cores per contract.
   * @return coresPerContract
  **/
  @ApiModelProperty(required = true, value = "The maximum number of cores per contract.")

  public Integer getCoresPerContract() {
    return coresPerContract;
  }


  public void setCoresPerContract(Integer coresPerContract) {
    this.coresPerContract = coresPerContract;
  }


  public ResourceLimits coresProvisioned(Integer coresProvisioned) {
    
    this.coresProvisioned = coresProvisioned;
    return this;
  }

   /**
   * The number of cores provisioned.
   * @return coresProvisioned
  **/
  @ApiModelProperty(required = true, value = "The number of cores provisioned.")

  public Integer getCoresProvisioned() {
    return coresProvisioned;
  }


  public void setCoresProvisioned(Integer coresProvisioned) {
    this.coresProvisioned = coresProvisioned;
  }


  public ResourceLimits ramPerServer(Integer ramPerServer) {
    
    this.ramPerServer = ramPerServer;
    return this;
  }

   /**
   * The maximum RAM per server.
   * @return ramPerServer
  **/
  @ApiModelProperty(required = true, value = "The maximum RAM per server.")

  public Integer getRamPerServer() {
    return ramPerServer;
  }


  public void setRamPerServer(Integer ramPerServer) {
    this.ramPerServer = ramPerServer;
  }


  public ResourceLimits ramPerContract(Integer ramPerContract) {
    
    this.ramPerContract = ramPerContract;
    return this;
  }

   /**
   * The maximum RAM per contract.
   * @return ramPerContract
  **/
  @ApiModelProperty(required = true, value = "The maximum RAM per contract.")

  public Integer getRamPerContract() {
    return ramPerContract;
  }


  public void setRamPerContract(Integer ramPerContract) {
    this.ramPerContract = ramPerContract;
  }


  public ResourceLimits ramProvisioned(Integer ramProvisioned) {
    
    this.ramProvisioned = ramProvisioned;
    return this;
  }

   /**
   * RAM provisioned.
   * @return ramProvisioned
  **/
  @ApiModelProperty(required = true, value = "RAM provisioned.")

  public Integer getRamProvisioned() {
    return ramProvisioned;
  }


  public void setRamProvisioned(Integer ramProvisioned) {
    this.ramProvisioned = ramProvisioned;
  }


  public ResourceLimits hddLimitPerVolume(Long hddLimitPerVolume) {
    
    this.hddLimitPerVolume = hddLimitPerVolume;
    return this;
  }

   /**
   * HDD limit per volume.
   * @return hddLimitPerVolume
  **/
  @ApiModelProperty(required = true, value = "HDD limit per volume.")

  public Long getHddLimitPerVolume() {
    return hddLimitPerVolume;
  }


  public void setHddLimitPerVolume(Long hddLimitPerVolume) {
    this.hddLimitPerVolume = hddLimitPerVolume;
  }


  public ResourceLimits hddLimitPerContract(Long hddLimitPerContract) {
    
    this.hddLimitPerContract = hddLimitPerContract;
    return this;
  }

   /**
   * HDD limit per contract.
   * @return hddLimitPerContract
  **/
  @ApiModelProperty(required = true, value = "HDD limit per contract.")

  public Long getHddLimitPerContract() {
    return hddLimitPerContract;
  }


  public void setHddLimitPerContract(Long hddLimitPerContract) {
    this.hddLimitPerContract = hddLimitPerContract;
  }


  public ResourceLimits hddVolumeProvisioned(Long hddVolumeProvisioned) {
    
    this.hddVolumeProvisioned = hddVolumeProvisioned;
    return this;
  }

   /**
   * HDD volume provisioned.
   * @return hddVolumeProvisioned
  **/
  @ApiModelProperty(required = true, value = "HDD volume provisioned.")

  public Long getHddVolumeProvisioned() {
    return hddVolumeProvisioned;
  }


  public void setHddVolumeProvisioned(Long hddVolumeProvisioned) {
    this.hddVolumeProvisioned = hddVolumeProvisioned;
  }


  public ResourceLimits ssdLimitPerVolume(Long ssdLimitPerVolume) {
    
    this.ssdLimitPerVolume = ssdLimitPerVolume;
    return this;
  }

   /**
   * SSD limit per volume.
   * @return ssdLimitPerVolume
  **/
  @ApiModelProperty(required = true, value = "SSD limit per volume.")

  public Long getSsdLimitPerVolume() {
    return ssdLimitPerVolume;
  }


  public void setSsdLimitPerVolume(Long ssdLimitPerVolume) {
    this.ssdLimitPerVolume = ssdLimitPerVolume;
  }


  public ResourceLimits ssdLimitPerContract(Long ssdLimitPerContract) {
    
    this.ssdLimitPerContract = ssdLimitPerContract;
    return this;
  }

   /**
   * SSD limit per contract.
   * @return ssdLimitPerContract
  **/
  @ApiModelProperty(required = true, value = "SSD limit per contract.")

  public Long getSsdLimitPerContract() {
    return ssdLimitPerContract;
  }


  public void setSsdLimitPerContract(Long ssdLimitPerContract) {
    this.ssdLimitPerContract = ssdLimitPerContract;
  }


  public ResourceLimits ssdVolumeProvisioned(Long ssdVolumeProvisioned) {
    
    this.ssdVolumeProvisioned = ssdVolumeProvisioned;
    return this;
  }

   /**
   * SSD volume provisioned.
   * @return ssdVolumeProvisioned
  **/
  @ApiModelProperty(required = true, value = "SSD volume provisioned.")

  public Long getSsdVolumeProvisioned() {
    return ssdVolumeProvisioned;
  }


  public void setSsdVolumeProvisioned(Long ssdVolumeProvisioned) {
    this.ssdVolumeProvisioned = ssdVolumeProvisioned;
  }


  public ResourceLimits dasVolumeProvisioned(Long dasVolumeProvisioned) {
    
    this.dasVolumeProvisioned = dasVolumeProvisioned;
    return this;
  }

   /**
   * DAS (Direct Attached Storage) volume provisioned.
   * @return dasVolumeProvisioned
  **/
  @ApiModelProperty(required = true, value = "DAS (Direct Attached Storage) volume provisioned.")

  public Long getDasVolumeProvisioned() {
    return dasVolumeProvisioned;
  }


  public void setDasVolumeProvisioned(Long dasVolumeProvisioned) {
    this.dasVolumeProvisioned = dasVolumeProvisioned;
  }


  public ResourceLimits reservableIps(Integer reservableIps) {
    
    this.reservableIps = reservableIps;
    return this;
  }

   /**
   * Total reservable IP limit for the customer.
   * @return reservableIps
  **/
  @ApiModelProperty(required = true, value = "Total reservable IP limit for the customer.")

  public Integer getReservableIps() {
    return reservableIps;
  }


  public void setReservableIps(Integer reservableIps) {
    this.reservableIps = reservableIps;
  }


  public ResourceLimits reservedIpsOnContract(Integer reservedIpsOnContract) {
    
    this.reservedIpsOnContract = reservedIpsOnContract;
    return this;
  }

   /**
   * Reserved ips for the contract.
   * @return reservedIpsOnContract
  **/
  @ApiModelProperty(required = true, value = "Reserved ips for the contract.")

  public Integer getReservedIpsOnContract() {
    return reservedIpsOnContract;
  }


  public void setReservedIpsOnContract(Integer reservedIpsOnContract) {
    this.reservedIpsOnContract = reservedIpsOnContract;
  }


  public ResourceLimits reservedIpsInUse(Integer reservedIpsInUse) {
    
    this.reservedIpsInUse = reservedIpsInUse;
    return this;
  }

   /**
   * Reserved ips in use.
   * @return reservedIpsInUse
  **/
  @ApiModelProperty(required = true, value = "Reserved ips in use.")

  public Integer getReservedIpsInUse() {
    return reservedIpsInUse;
  }


  public void setReservedIpsInUse(Integer reservedIpsInUse) {
    this.reservedIpsInUse = reservedIpsInUse;
  }


  public ResourceLimits k8sClusterLimitTotal(Integer k8sClusterLimitTotal) {
    
    this.k8sClusterLimitTotal = k8sClusterLimitTotal;
    return this;
  }

   /**
   * K8s clusters total limit.
   * @return k8sClusterLimitTotal
  **/
  @ApiModelProperty(required = true, value = "K8s clusters total limit.")

  public Integer getK8sClusterLimitTotal() {
    return k8sClusterLimitTotal;
  }


  public void setK8sClusterLimitTotal(Integer k8sClusterLimitTotal) {
    this.k8sClusterLimitTotal = k8sClusterLimitTotal;
  }


  public ResourceLimits k8sClustersProvisioned(Integer k8sClustersProvisioned) {
    
    this.k8sClustersProvisioned = k8sClustersProvisioned;
    return this;
  }

   /**
   * K8s clusters provisioned.
   * @return k8sClustersProvisioned
  **/
  @ApiModelProperty(required = true, value = "K8s clusters provisioned.")

  public Integer getK8sClustersProvisioned() {
    return k8sClustersProvisioned;
  }


  public void setK8sClustersProvisioned(Integer k8sClustersProvisioned) {
    this.k8sClustersProvisioned = k8sClustersProvisioned;
  }


  public ResourceLimits nlbLimitTotal(Integer nlbLimitTotal) {
    
    this.nlbLimitTotal = nlbLimitTotal;
    return this;
  }

   /**
   * NLB total limit.
   * @return nlbLimitTotal
  **/
  @ApiModelProperty(required = true, value = "NLB total limit.")

  public Integer getNlbLimitTotal() {
    return nlbLimitTotal;
  }


  public void setNlbLimitTotal(Integer nlbLimitTotal) {
    this.nlbLimitTotal = nlbLimitTotal;
  }


  public ResourceLimits nlbProvisioned(Integer nlbProvisioned) {
    
    this.nlbProvisioned = nlbProvisioned;
    return this;
  }

   /**
   * NLBs provisioned.
   * @return nlbProvisioned
  **/
  @ApiModelProperty(required = true, value = "NLBs provisioned.")

  public Integer getNlbProvisioned() {
    return nlbProvisioned;
  }


  public void setNlbProvisioned(Integer nlbProvisioned) {
    this.nlbProvisioned = nlbProvisioned;
  }


  public ResourceLimits natGatewayLimitTotal(Integer natGatewayLimitTotal) {
    
    this.natGatewayLimitTotal = natGatewayLimitTotal;
    return this;
  }

   /**
   * NAT Gateway total limit.
   * @return natGatewayLimitTotal
  **/
  @ApiModelProperty(required = true, value = "NAT Gateway total limit.")

  public Integer getNatGatewayLimitTotal() {
    return natGatewayLimitTotal;
  }


  public void setNatGatewayLimitTotal(Integer natGatewayLimitTotal) {
    this.natGatewayLimitTotal = natGatewayLimitTotal;
  }


  public ResourceLimits natGatewayProvisioned(Integer natGatewayProvisioned) {
    
    this.natGatewayProvisioned = natGatewayProvisioned;
    return this;
  }

   /**
   * NAT Gateways provisioned.
   * @return natGatewayProvisioned
  **/
  @ApiModelProperty(required = true, value = "NAT Gateways provisioned.")

  public Integer getNatGatewayProvisioned() {
    return natGatewayProvisioned;
  }


  public void setNatGatewayProvisioned(Integer natGatewayProvisioned) {
    this.natGatewayProvisioned = natGatewayProvisioned;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResourceLimits resourceLimits = (ResourceLimits) o;
    return Objects.equals(this.coresPerServer, resourceLimits.coresPerServer) && Objects.equals(this.coresPerContract, resourceLimits.coresPerContract) && Objects.equals(this.coresProvisioned, resourceLimits.coresProvisioned) && Objects.equals(this.ramPerServer, resourceLimits.ramPerServer) && Objects.equals(this.ramPerContract, resourceLimits.ramPerContract) && Objects.equals(this.ramProvisioned, resourceLimits.ramProvisioned) && Objects.equals(this.hddLimitPerVolume, resourceLimits.hddLimitPerVolume) && Objects.equals(this.hddLimitPerContract, resourceLimits.hddLimitPerContract) && Objects.equals(this.hddVolumeProvisioned, resourceLimits.hddVolumeProvisioned) && Objects.equals(this.ssdLimitPerVolume, resourceLimits.ssdLimitPerVolume) && Objects.equals(this.ssdLimitPerContract, resourceLimits.ssdLimitPerContract) && Objects.equals(this.ssdVolumeProvisioned, resourceLimits.ssdVolumeProvisioned) && Objects.equals(this.dasVolumeProvisioned, resourceLimits.dasVolumeProvisioned) && Objects.equals(this.reservableIps, resourceLimits.reservableIps) && Objects.equals(this.reservedIpsOnContract, resourceLimits.reservedIpsOnContract) && Objects.equals(this.reservedIpsInUse, resourceLimits.reservedIpsInUse) && Objects.equals(this.k8sClusterLimitTotal, resourceLimits.k8sClusterLimitTotal) && Objects.equals(this.k8sClustersProvisioned, resourceLimits.k8sClustersProvisioned) && Objects.equals(this.nlbLimitTotal, resourceLimits.nlbLimitTotal) && Objects.equals(this.nlbProvisioned, resourceLimits.nlbProvisioned) && Objects.equals(this.natGatewayLimitTotal, resourceLimits.natGatewayLimitTotal) && Objects.equals(this.natGatewayProvisioned, resourceLimits.natGatewayProvisioned);
  }




  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResourceLimits {\n");
    sb.append("    coresPerServer: ").append(toIndentedString(coresPerServer)).append("\n");
    sb.append("    coresPerContract: ").append(toIndentedString(coresPerContract)).append("\n");
    sb.append("    coresProvisioned: ").append(toIndentedString(coresProvisioned)).append("\n");
    sb.append("    ramPerServer: ").append(toIndentedString(ramPerServer)).append("\n");
    sb.append("    ramPerContract: ").append(toIndentedString(ramPerContract)).append("\n");
    sb.append("    ramProvisioned: ").append(toIndentedString(ramProvisioned)).append("\n");
    sb.append("    hddLimitPerVolume: ").append(toIndentedString(hddLimitPerVolume)).append("\n");
    sb.append("    hddLimitPerContract: ").append(toIndentedString(hddLimitPerContract)).append("\n");
    sb.append("    hddVolumeProvisioned: ").append(toIndentedString(hddVolumeProvisioned)).append("\n");
    sb.append("    ssdLimitPerVolume: ").append(toIndentedString(ssdLimitPerVolume)).append("\n");
    sb.append("    ssdLimitPerContract: ").append(toIndentedString(ssdLimitPerContract)).append("\n");
    sb.append("    ssdVolumeProvisioned: ").append(toIndentedString(ssdVolumeProvisioned)).append("\n");
    sb.append("    dasVolumeProvisioned: ").append(toIndentedString(dasVolumeProvisioned)).append("\n");
    sb.append("    reservableIps: ").append(toIndentedString(reservableIps)).append("\n");
    sb.append("    reservedIpsOnContract: ").append(toIndentedString(reservedIpsOnContract)).append("\n");
    sb.append("    reservedIpsInUse: ").append(toIndentedString(reservedIpsInUse)).append("\n");
    sb.append("    k8sClusterLimitTotal: ").append(toIndentedString(k8sClusterLimitTotal)).append("\n");
    sb.append("    k8sClustersProvisioned: ").append(toIndentedString(k8sClustersProvisioned)).append("\n");
    sb.append("    nlbLimitTotal: ").append(toIndentedString(nlbLimitTotal)).append("\n");
    sb.append("    nlbProvisioned: ").append(toIndentedString(nlbProvisioned)).append("\n");
    sb.append("    natGatewayLimitTotal: ").append(toIndentedString(natGatewayLimitTotal)).append("\n");
    sb.append("    natGatewayProvisioned: ").append(toIndentedString(natGatewayProvisioned)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

