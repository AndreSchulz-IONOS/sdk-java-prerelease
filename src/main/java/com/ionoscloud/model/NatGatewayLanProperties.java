/*
 * CLOUD API
 * An enterprise-grade Infrastructure is provided as a Service (IaaS) solution that can be managed through a browser-based \"Data Center Designer\" (DCD) tool or via an easy to use API.   The API allows you to perform a variety of management tasks such as spinning up additional servers, adding volumes, adjusting networking, and so forth. It is designed to allow users to leverage the same power and flexibility found within the DCD visual tool. Both tools are consistent with their concepts and lend well to making the experience smooth and intuitive.
 *
 * The version of the OpenAPI document: 6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ionoscloud.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * NatGatewayLanProperties
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-05-12T07:27:29.402Z[Etc/UTC]")

public class NatGatewayLanProperties {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_GATEWAY_IPS = "gatewayIps";
  @SerializedName(SERIALIZED_NAME_GATEWAY_IPS)
  private List<String> gatewayIps = null;


  public NatGatewayLanProperties id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Id for the LAN connected to the NAT gateway
   * @return id
  **/
  @ApiModelProperty(example = "3", required = true, value = "Id for the LAN connected to the NAT gateway")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public NatGatewayLanProperties gatewayIps(List<String> gatewayIps) {
    
    this.gatewayIps = gatewayIps;
    return this;
  }

  public NatGatewayLanProperties addGatewayIpsItem(String gatewayIpsItem) {
    if (this.gatewayIps == null) {
      this.gatewayIps = new ArrayList<String>();
    }
    this.gatewayIps.add(gatewayIpsItem);
    return this;
  }

   /**
   * Collection of gateway IP addresses of the NAT gateway. Will be auto-generated if not provided. Should ideally be an IP belonging to the same subnet as the LAN
   * @return gatewayIps
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[10.12.1.2/24, 10.11.2.5/24, 10.11.2.4]", value = "Collection of gateway IP addresses of the NAT gateway. Will be auto-generated if not provided. Should ideally be an IP belonging to the same subnet as the LAN")

  public List<String> getGatewayIps() {
    return gatewayIps;
  }


  public void setGatewayIps(List<String> gatewayIps) {
    this.gatewayIps = gatewayIps;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NatGatewayLanProperties natGatewayLanProperties = (NatGatewayLanProperties) o;
    return Objects.equals(this.id, natGatewayLanProperties.id) && Objects.equals(this.gatewayIps, natGatewayLanProperties.gatewayIps);
  }




  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NatGatewayLanProperties {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    gatewayIps: ").append(toIndentedString(gatewayIps)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

