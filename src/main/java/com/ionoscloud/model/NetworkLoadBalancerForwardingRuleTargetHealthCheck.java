/*
 * CLOUD API
 * IONOS Enterprise-grade Infrastructure as a Service (IaaS) solutions can be managed through the Cloud API, in addition or as an alternative to the \"Data Center Designer\" (DCD) browser-based tool.    Both methods employ consistent concepts and features, deliver similar power and flexibility, and can be used to perform a multitude of management tasks, including adding servers, volumes, configuring networks, and so on.
 *
 * The version of the OpenAPI document: 6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ionoscloud.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * NetworkLoadBalancerForwardingRuleTargetHealthCheck
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-07-04T14:02:16.072Z[Etc/UTC]")

public class NetworkLoadBalancerForwardingRuleTargetHealthCheck {
  public static final String SERIALIZED_NAME_CHECK = "check";
  @SerializedName(SERIALIZED_NAME_CHECK)
  private Boolean check;

  public static final String SERIALIZED_NAME_CHECK_INTERVAL = "checkInterval";
  @SerializedName(SERIALIZED_NAME_CHECK_INTERVAL)
  private Integer checkInterval;

  public static final String SERIALIZED_NAME_MAINTENANCE = "maintenance";
  @SerializedName(SERIALIZED_NAME_MAINTENANCE)
  private Boolean maintenance;


  public NetworkLoadBalancerForwardingRuleTargetHealthCheck check(Boolean check) {
    
    this.check = check;
    return this;
  }

   /**
   * Makes the target available only if it accepts periodic health check TCP connection attempts; when turned off, the target is considered always available. The health check only consists of a connection attempt to the address and port of the target.
   * @return check
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Makes the target available only if it accepts periodic health check TCP connection attempts; when turned off, the target is considered always available. The health check only consists of a connection attempt to the address and port of the target.")

  public Boolean getCheck() {
    return check;
  }


  public void setCheck(Boolean check) {
    this.check = check;
  }


  public NetworkLoadBalancerForwardingRuleTargetHealthCheck checkInterval(Integer checkInterval) {
    
    this.checkInterval = checkInterval;
    return this;
  }

   /**
   * The interval in milliseconds between consecutive health checks; default is 2000.
   * @return checkInterval
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2000", value = "The interval in milliseconds between consecutive health checks; default is 2000.")

  public Integer getCheckInterval() {
    return checkInterval;
  }


  public void setCheckInterval(Integer checkInterval) {
    this.checkInterval = checkInterval;
  }


  public NetworkLoadBalancerForwardingRuleTargetHealthCheck maintenance(Boolean maintenance) {
    
    this.maintenance = maintenance;
    return this;
  }

   /**
   * Maintenance mode prevents the target from receiving balanced traffic.
   * @return maintenance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Maintenance mode prevents the target from receiving balanced traffic.")

  public Boolean getMaintenance() {
    return maintenance;
  }


  public void setMaintenance(Boolean maintenance) {
    this.maintenance = maintenance;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NetworkLoadBalancerForwardingRuleTargetHealthCheck networkLoadBalancerForwardingRuleTargetHealthCheck = (NetworkLoadBalancerForwardingRuleTargetHealthCheck) o;
    return Objects.equals(this.check, networkLoadBalancerForwardingRuleTargetHealthCheck.check) && Objects.equals(this.checkInterval, networkLoadBalancerForwardingRuleTargetHealthCheck.checkInterval) && Objects.equals(this.maintenance, networkLoadBalancerForwardingRuleTargetHealthCheck.maintenance);
  }




  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NetworkLoadBalancerForwardingRuleTargetHealthCheck {\n");
    sb.append("    check: ").append(toIndentedString(check)).append("\n");
    sb.append("    checkInterval: ").append(toIndentedString(checkInterval)).append("\n");
    sb.append("    maintenance: ").append(toIndentedString(maintenance)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

