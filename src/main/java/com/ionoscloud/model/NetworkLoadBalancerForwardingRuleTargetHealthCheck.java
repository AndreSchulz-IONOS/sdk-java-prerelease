/*
 * CLOUD API
 * IONOS Enterprise-grade Infrastructure as a Service (IaaS) solutions can be managed through the Cloud API, in addition or as an alternative to the \"Data Center Designer\" (DCD) browser-based tool.    Both methods employ consistent concepts and features, deliver similar power and flexibility, and can be used to perform a multitude of management tasks, including adding servers, volumes, configuring networks, and so on.
 *
 * The version of the OpenAPI document: 6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ionoscloud.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * NetworkLoadBalancerForwardingRuleTargetHealthCheck
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-10T13:39:44.583Z[Etc/UTC]")

public class NetworkLoadBalancerForwardingRuleTargetHealthCheck {
  public static final String SERIALIZED_NAME_CHECK = "check";
  @SerializedName(SERIALIZED_NAME_CHECK)
  private Boolean check;

  public static final String SERIALIZED_NAME_CHECK_INTERVAL = "checkInterval";
  @SerializedName(SERIALIZED_NAME_CHECK_INTERVAL)
  private Integer checkInterval;

  public static final String SERIALIZED_NAME_MAINTENANCE = "maintenance";
  @SerializedName(SERIALIZED_NAME_MAINTENANCE)
  private Boolean maintenance;


  public NetworkLoadBalancerForwardingRuleTargetHealthCheck check(Boolean check) {
    
    this.check = check;
    return this;
  }

   /**
   * Check specifies whether the target VM&#39;s health is checked. If turned off, a target VM is always considered available. If turned on, the target VM is available when accepting periodic TCP connections, to ensure that it is really able to serve requests. The address and port to send the tests to are those of the target VM. The health check only consists of a connection attempt.
   * @return check
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Check specifies whether the target VM's health is checked. If turned off, a target VM is always considered available. If turned on, the target VM is available when accepting periodic TCP connections, to ensure that it is really able to serve requests. The address and port to send the tests to are those of the target VM. The health check only consists of a connection attempt.")

  public Boolean getCheck() {
    return check;
  }


  public void setCheck(Boolean check) {
    this.check = check;
  }


  public NetworkLoadBalancerForwardingRuleTargetHealthCheck checkInterval(Integer checkInterval) {
    
    this.checkInterval = checkInterval;
    return this;
  }

   /**
   * CheckInterval determines the duration (in milliseconds) between consecutive health checks. If unspecified a default of 2000 ms is used.
   * @return checkInterval
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2000", value = "CheckInterval determines the duration (in milliseconds) between consecutive health checks. If unspecified a default of 2000 ms is used.")

  public Integer getCheckInterval() {
    return checkInterval;
  }


  public void setCheckInterval(Integer checkInterval) {
    this.checkInterval = checkInterval;
  }


  public NetworkLoadBalancerForwardingRuleTargetHealthCheck maintenance(Boolean maintenance) {
    
    this.maintenance = maintenance;
    return this;
  }

   /**
   * Maintenance specifies if a target VM should be marked as down, even if it is not.
   * @return maintenance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Maintenance specifies if a target VM should be marked as down, even if it is not.")

  public Boolean getMaintenance() {
    return maintenance;
  }


  public void setMaintenance(Boolean maintenance) {
    this.maintenance = maintenance;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NetworkLoadBalancerForwardingRuleTargetHealthCheck networkLoadBalancerForwardingRuleTargetHealthCheck = (NetworkLoadBalancerForwardingRuleTargetHealthCheck) o;
    return Objects.equals(this.check, networkLoadBalancerForwardingRuleTargetHealthCheck.check) && Objects.equals(this.checkInterval, networkLoadBalancerForwardingRuleTargetHealthCheck.checkInterval) && Objects.equals(this.maintenance, networkLoadBalancerForwardingRuleTargetHealthCheck.maintenance);
  }




  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NetworkLoadBalancerForwardingRuleTargetHealthCheck {\n");
    sb.append("    check: ").append(toIndentedString(check)).append("\n");
    sb.append("    checkInterval: ").append(toIndentedString(checkInterval)).append("\n");
    sb.append("    maintenance: ").append(toIndentedString(maintenance)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

