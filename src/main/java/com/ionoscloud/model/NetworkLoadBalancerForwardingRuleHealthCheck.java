/*
 * CLOUD API
 * IONOS Enterprise-grade Infrastructure as a Service (IaaS) solutions can be managed through the Cloud API, in addition or as an alternative to the \"Data Center Designer\" (DCD) browser-based tool.    Both methods employ consistent concepts and features, deliver similar power and flexibility, and can be used to perform a multitude of management tasks, including adding servers, volumes, configuring networks, and so on.
 *
 * The version of the OpenAPI document: 6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ionoscloud.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * NetworkLoadBalancerForwardingRuleHealthCheck
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-10T13:39:44.583Z[Etc/UTC]")

public class NetworkLoadBalancerForwardingRuleHealthCheck {
  public static final String SERIALIZED_NAME_CLIENT_TIMEOUT = "clientTimeout";
  @SerializedName(SERIALIZED_NAME_CLIENT_TIMEOUT)
  private Integer clientTimeout;

  public static final String SERIALIZED_NAME_CONNECT_TIMEOUT = "connectTimeout";
  @SerializedName(SERIALIZED_NAME_CONNECT_TIMEOUT)
  private Integer connectTimeout;

  public static final String SERIALIZED_NAME_TARGET_TIMEOUT = "targetTimeout";
  @SerializedName(SERIALIZED_NAME_TARGET_TIMEOUT)
  private Integer targetTimeout;

  public static final String SERIALIZED_NAME_RETRIES = "retries";
  @SerializedName(SERIALIZED_NAME_RETRIES)
  private Integer retries;


  public NetworkLoadBalancerForwardingRuleHealthCheck clientTimeout(Integer clientTimeout) {
    
    this.clientTimeout = clientTimeout;
    return this;
  }

   /**
   * ClientTimeout is expressed in milliseconds. This inactivity timeout applies when the client is expected to acknowledge or send data. If unset the default of 50 seconds will be used.
   * @return clientTimeout
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "50", value = "ClientTimeout is expressed in milliseconds. This inactivity timeout applies when the client is expected to acknowledge or send data. If unset the default of 50 seconds will be used.")

  public Integer getClientTimeout() {
    return clientTimeout;
  }


  public void setClientTimeout(Integer clientTimeout) {
    this.clientTimeout = clientTimeout;
  }


  public NetworkLoadBalancerForwardingRuleHealthCheck connectTimeout(Integer connectTimeout) {
    
    this.connectTimeout = connectTimeout;
    return this;
  }

   /**
   * It specifies the maximum time (in milliseconds) to wait for a connection attempt to a target VM to succeed. If unset, the default of 5 seconds will be used.
   * @return connectTimeout
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "5000", value = "It specifies the maximum time (in milliseconds) to wait for a connection attempt to a target VM to succeed. If unset, the default of 5 seconds will be used.")

  public Integer getConnectTimeout() {
    return connectTimeout;
  }


  public void setConnectTimeout(Integer connectTimeout) {
    this.connectTimeout = connectTimeout;
  }


  public NetworkLoadBalancerForwardingRuleHealthCheck targetTimeout(Integer targetTimeout) {
    
    this.targetTimeout = targetTimeout;
    return this;
  }

   /**
   * TargetTimeout specifies the maximum inactivity time (in milliseconds) on the target VM side. If unset, the default of 50 seconds will be used.
   * @return targetTimeout
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "50000", value = "TargetTimeout specifies the maximum inactivity time (in milliseconds) on the target VM side. If unset, the default of 50 seconds will be used.")

  public Integer getTargetTimeout() {
    return targetTimeout;
  }


  public void setTargetTimeout(Integer targetTimeout) {
    this.targetTimeout = targetTimeout;
  }


  public NetworkLoadBalancerForwardingRuleHealthCheck retries(Integer retries) {
    
    this.retries = retries;
    return this;
  }

   /**
   * Retries specifies the number of retries to perform on a target VM after a connection failure. If unset, the default value of 3 will be used. (valid range: [0, 65535])
   * @return retries
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "3", value = "Retries specifies the number of retries to perform on a target VM after a connection failure. If unset, the default value of 3 will be used. (valid range: [0, 65535])")

  public Integer getRetries() {
    return retries;
  }


  public void setRetries(Integer retries) {
    this.retries = retries;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NetworkLoadBalancerForwardingRuleHealthCheck networkLoadBalancerForwardingRuleHealthCheck = (NetworkLoadBalancerForwardingRuleHealthCheck) o;
    return Objects.equals(this.clientTimeout, networkLoadBalancerForwardingRuleHealthCheck.clientTimeout) && Objects.equals(this.connectTimeout, networkLoadBalancerForwardingRuleHealthCheck.connectTimeout) && Objects.equals(this.targetTimeout, networkLoadBalancerForwardingRuleHealthCheck.targetTimeout) && Objects.equals(this.retries, networkLoadBalancerForwardingRuleHealthCheck.retries);
  }




  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NetworkLoadBalancerForwardingRuleHealthCheck {\n");
    sb.append("    clientTimeout: ").append(toIndentedString(clientTimeout)).append("\n");
    sb.append("    connectTimeout: ").append(toIndentedString(connectTimeout)).append("\n");
    sb.append("    targetTimeout: ").append(toIndentedString(targetTimeout)).append("\n");
    sb.append("    retries: ").append(toIndentedString(retries)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

